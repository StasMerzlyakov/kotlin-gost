/*
 * Created by Stanislav Merzlyakov
 * st.merzlyakov@yandex.ru
 *  in May-2022.
 */

package su.ztech.crypto.gost34122008

import kotlin.test.Test
import kotlin.test.assertContentEquals

class KuznyechikTest {

    // A.2.1
    @Test
    fun doTestS1() {
        val input = ubyteArrayOf(
            0xffu, 0xeeu, 0xddu, 0xccu, 0xbbu, 0xaau, 0x99u, 0x88u,
            0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u, 0x00u
        )

        gostS(input)

        assertContentEquals(
            ubyteArrayOf(
                0xb6u, 0x6cu, 0xd8u, 0x88u, 0x7du, 0x38u, 0xe8u, 0xd7u,
                0x77u, 0x65u, 0xaeu, 0xeau, 0x0cu, 0x9au, 0x7eu, 0xfcu
            ),
            input
        )
    }

    @Test
    fun doTestS2() {
        val input = ubyteArrayOf(
            0xb6u, 0x6cu, 0xd8u, 0x88u, 0x7du, 0x38u, 0xe8u, 0xd7u,
            0x77u, 0x65u, 0xaeu, 0xeau, 0x0cu, 0x9au, 0x7eu, 0xfcu
        )

        gostS(input)

        assertContentEquals(
            ubyteArrayOf(
                0x55u, 0x9du, 0x8du, 0xd7u, 0xbdu, 0x06u, 0xcbu, 0xfeu,
                0x7eu, 0x7bu, 0x26u, 0x25u, 0x23u, 0x28u, 0x0du, 0x39u
            ),
            input
        )
    }

    @Test
    fun doTestS3() {
        val input = ubyteArrayOf(
            0x55u, 0x9du, 0x8du, 0xd7u, 0xbdu, 0x06u, 0xcbu, 0xfeu,
            0x7eu, 0x7bu, 0x26u, 0x25u, 0x23u, 0x28u, 0x0du, 0x39u
        )

        gostS(input)

        assertContentEquals(
            ubyteArrayOf(
                0x0cu, 0x33u, 0x22u, 0xfeu, 0xd5u, 0x31u, 0xe4u, 0x63u,
                0x0du, 0x80u, 0xefu, 0x5cu, 0x5au, 0x81u, 0xc5u, 0x0bu
            ),
            input
        )
    }

    @Test
    fun doTestS4() {
        val input = ubyteArrayOf(
            0x0cu, 0x33u, 0x22u, 0xfeu, 0xd5u, 0x31u, 0xe4u, 0x63u,
            0x0du, 0x80u, 0xefu, 0x5cu, 0x5au, 0x81u, 0xc5u, 0x0bu
        )

        gostS(input)

        assertContentEquals(
            ubyteArrayOf(
                0x23u, 0xaeu, 0x65u, 0x63u, 0x3fu, 0x84u, 0x2du, 0x29u,
                0xc5u, 0xdfu, 0x52u, 0x9cu, 0x13u, 0xf5u, 0xacu, 0xdau
            ),
            input
        )
    }

    // A.2.2
    @Test
    fun doTestR1() {
        val input = ubyteArrayOf(
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u
        )

        gostR(input)

        assertContentEquals(
            ubyteArrayOf(
                0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
                0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
            ),
            input
        )
    }

    @Test
    fun doTestR2() {
        val input = ubyteArrayOf(
            0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
        )

        gostR(input)

        assertContentEquals(
            ubyteArrayOf(
                0xa5u, 0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
                0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            ),
            input
        )
    }

    @Test
    fun doTestR3() {
        val input = ubyteArrayOf(
            0xa5u, 0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
        )

        gostR(input)

        assertContentEquals(
            ubyteArrayOf(
                0x64u, 0xa5u, 0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
                0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            ),
            input
        )
    }

    @Test
    fun doTestR4() {
        val input = ubyteArrayOf(
            0x64u, 0xa5u, 0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
        )

        gostR(input)

        assertContentEquals(
            ubyteArrayOf(
                0x0du, 0x64u, 0xa5u, 0x94u, 0x00u, 0x00u, 0x00u, 0x00u,
                0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            ),
            input
        )
    }

    // A.2.3
    @Test
    fun doTestL1() {
        val input = ubyteArrayOf(
            0x64u, 0xa5u, 0x94u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
            0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
        )

        gostL(input)

        assertContentEquals(
            ubyteArrayOf(
                0xd4u, 0x56u, 0x58u, 0x4du, 0xd0u, 0xe3u, 0xe8u, 0x4cu,
                0xc3u, 0x16u, 0x6eu, 0x4bu, 0x7fu, 0xa2u, 0x89u, 0x0du
            ),
            input
        )
    }

    @Test
    fun doTestL2() {
        val input = ubyteArrayOf(
            0xd4u, 0x56u, 0x58u, 0x4du, 0xd0u, 0xe3u, 0xe8u, 0x4cu,
            0xc3u, 0x16u, 0x6eu, 0x4bu, 0x7fu, 0xa2u, 0x89u, 0x0du
        )

        gostL(input)

        assertContentEquals(
            ubyteArrayOf(
                0x79u, 0xd2u, 0x62u, 0x21u, 0xb8u, 0x7bu, 0x58u, 0x4cu,
                0xd4u, 0x2fu, 0xbcu, 0x4fu, 0xfeu, 0xa5u, 0xdeu, 0x9au
            ),
            input
        )
    }

    @Test
    fun doTestL3() {
        val input = ubyteArrayOf(
            0x79u, 0xd2u, 0x62u, 0x21u, 0xb8u, 0x7bu, 0x58u, 0x4cu,
            0xd4u, 0x2fu, 0xbcu, 0x4fu, 0xfeu, 0xa5u, 0xdeu, 0x9au
        )

        gostL(input)

        assertContentEquals(
            ubyteArrayOf(
                0x0eu, 0x93u, 0x69u, 0x1au, 0x0cu, 0xfcu, 0x60u, 0x40u,
                0x8bu, 0x7bu, 0x68u, 0xf6u, 0x6bu, 0x51u, 0x3cu, 0x13u
            ),
            input
        )
    }

    @Test
    fun doTestL4() {
        val input = ubyteArrayOf(
            0x0eu, 0x93u, 0x69u, 0x1au, 0x0cu, 0xfcu, 0x60u, 0x40u,
            0x8bu, 0x7bu, 0x68u, 0xf6u, 0x6bu, 0x51u, 0x3cu, 0x13u
        )

        gostL(input)

        assertContentEquals(
            ubyteArrayOf(
                0xe6u, 0xa8u, 0x09u, 0x4fu, 0xeeu, 0x0au, 0xa2u, 0x04u,
                0xfdu, 0x97u, 0xbcu, 0xb0u, 0xb4u, 0x4bu, 0x85u, 0x80u
            ),
            input
        )
    }

    // A.2.4
    @Test
    fun doTestK1() {
        val key1Key2 = Pair(
            ubyteArrayOf(0x88u, 0x99u, 0xaau, 0xbbu, 0xccu, 0xddu, 0xeeu, 0xffu, 0x00u, 0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u),
            ubyteArrayOf(0xfeu, 0xdcu, 0xbau, 0x98u, 0x76u, 0x54u, 0x32u, 0x10u, 0x01u, 0x23u, 0x45u, 0x67u, 0x89u, 0xabu, 0xcdu, 0xefu)
        )
        val c1 = C[1]!!
        val state = UByteArray(KUZNYECHIK_BLOCK_SIZE)
        gostX(c1, key1Key2.first, state)

        assertContentEquals(
            ubyteArrayOf(
                0xe6u, 0x3bu, 0xdcu, 0xc9u, 0xa0u, 0x95u, 0x94u, 0x47u, 0x5du, 0x36u, 0x9fu, 0x23u, 0x99u, 0xd1u, 0xf2u, 0x76u
            ),
            state
        )

        gostS(state)
        assertContentEquals(
            ubyteArrayOf(
                0x09u, 0x98u, 0xcau, 0x37u, 0xa7u, 0x94u, 0x7au, 0xabu, 0xb7u, 0x8fu, 0x4au, 0x5au, 0xe8u, 0x1bu, 0x74u, 0x8au
            ),
            state
        )

        gostL(state)
        assertContentEquals(
            ubyteArrayOf(
                0x3du, 0x09u, 0x40u, 0x99u, 0x9du, 0xb7u, 0x5du, 0x6au, 0x92u, 0x57u, 0x07u, 0x1du, 0x5eu, 0x61u, 0x44u, 0xa6u
            ),
            state
        )

        val pair2 = gostF(c1, key1Key2)
        assertContentEquals(
            ubyteArrayOf(
                0xc3u, 0xd5u, 0xfau, 0x01u, 0xebu, 0xe3u, 0x6fu, 0x7au, 0x93u, 0x74u, 0x42u, 0x7au, 0xd7u, 0xcau, 0x89u, 0x49u
            ),
            pair2.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x88u, 0x99u, 0xaau, 0xbbu, 0xccu, 0xddu, 0xeeu, 0xffu, 0x00u, 0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u
            ),
            pair2.second
        )

        val c2 = C[2]!!
        val pair3 = gostF(c2, pair2)

        assertContentEquals(
            ubyteArrayOf(
                0x37u, 0x77u, 0x77u, 0x48u, 0xe5u, 0x64u, 0x53u, 0x37u, 0x7du, 0x5eu, 0x26u, 0x2du, 0x90u, 0x90u, 0x3fu, 0x87u
            ),
            pair3.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0xc3u, 0xd5u, 0xfau, 0x01u, 0xebu, 0xe3u, 0x6fu, 0x7au, 0x93u, 0x74u, 0x42u, 0x7au, 0xd7u, 0xcau, 0x89u, 0x49u
            ),
            pair3.second
        )

        val c3 = C[3]!!
        val pair4 = gostF(c3, pair3)
        assertContentEquals(
            ubyteArrayOf(
                0xf9u, 0xeau, 0xe5u, 0xf2u, 0x9bu, 0x28u, 0x15u, 0xe3u, 0x1fu, 0x11u, 0xacu, 0x5du, 0x9cu, 0x29u, 0xfbu, 0x01u
            ),
            pair4.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x37u, 0x77u, 0x77u, 0x48u, 0xe5u, 0x64u, 0x53u, 0x37u, 0x7du, 0x5eu, 0x26u, 0x2du, 0x90u, 0x90u, 0x3fu, 0x87u
            ),
            pair4.second
        )

        val c4 = C[4]!!
        val pair5 = gostF(c4, pair4)
        assertContentEquals(
            ubyteArrayOf(
                0xe9u, 0x80u, 0x08u, 0x96u, 0x83u, 0xd0u, 0x0du, 0x4bu, 0xe3u, 0x7du, 0xd3u, 0x43u, 0x46u, 0x99u, 0xb9u, 0x8fu
            ),
            pair5.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0xf9u, 0xeau, 0xe5u, 0xf2u, 0x9bu, 0x28u, 0x15u, 0xe3u, 0x1fu, 0x11u, 0xacu, 0x5du, 0x9cu, 0x29u, 0xfbu, 0x01u
            ),
            pair5.second
        )

        val c5 = C[5]!!
        val pair6 = gostF(c5, pair5)
        assertContentEquals(
            ubyteArrayOf(
                0xb7u, 0xbdu, 0x70u, 0xacu, 0xeau, 0x44u, 0x60u, 0x71u, 0x4fu, 0x4eu, 0xbeu, 0x13u, 0x83u, 0x5cu, 0xf0u, 0x04u
            ),
            pair6.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0xe9u, 0x80u, 0x08u, 0x96u, 0x83u, 0xd0u, 0x0du, 0x4bu, 0xe3u, 0x7du, 0xd3u, 0x43u, 0x46u, 0x99u, 0xb9u, 0x8fu
            ),
            pair6.second
        )

        val c6 = C[6]!!
        val pair7 = gostF(c6, pair6)
        assertContentEquals(
            ubyteArrayOf(
                0x1au, 0x46u, 0xeau, 0x1cu, 0xf6u, 0xccu, 0xd2u, 0x36u, 0x46u, 0x72u, 0x87u, 0xdfu, 0x93u, 0xfdu, 0xf9u, 0x74u,
            ),
            pair7.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0xb7u, 0xbdu, 0x70u, 0xacu, 0xeau, 0x44u, 0x60u, 0x71u, 0x4fu, 0x4eu, 0xbeu, 0x13u, 0x83u, 0x5cu, 0xf0u, 0x04u
            ),
            pair7.second
        )

        val c7 = C[7]!!
        val pair8 = gostF(c7, pair7)
        assertContentEquals(
            ubyteArrayOf(
                0x3du, 0x45u, 0x53u, 0xd8u, 0xe9u, 0xcfu, 0xecu, 0x68u, 0x15u, 0xebu, 0xadu, 0xc4u, 0x0au, 0x9fu, 0xfdu, 0x04u
            ),
            pair8.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x1au, 0x46u, 0xeau, 0x1cu, 0xf6u, 0xccu, 0xd2u, 0x36u, 0x46u, 0x72u, 0x87u, 0xdfu, 0x93u, 0xfdu, 0xf9u, 0x74u,
            ),
            pair8.second
        )

        val c8 = C[8]!!
        val pair9 = gostF(c8, pair8)
        assertContentEquals(
            ubyteArrayOf(
                0xdbu, 0x31u, 0x48u, 0x53u, 0x15u, 0x69u, 0x43u, 0x43u, 0x22u, 0x8du, 0x6au, 0xefu, 0x8cu, 0xc7u, 0x8cu, 0x44u
            ),
            pair9.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x3du, 0x45u, 0x53u, 0xd8u, 0xe9u, 0xcfu, 0xecu, 0x68u, 0x15u, 0xebu, 0xadu, 0xc4u, 0x0au, 0x9fu, 0xfdu, 0x04u
            ),
            pair9.second
        )

        val key3Key4 = gostKeyExpand(1, key1Key2)
        assertContentEquals(
            ubyteArrayOf(
                0xdbu, 0x31u, 0x48u, 0x53u, 0x15u, 0x69u, 0x43u, 0x43u, 0x22u, 0x8du, 0x6au, 0xefu, 0x8cu, 0xc7u, 0x8cu, 0x44u
            ),
            key3Key4.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x3du, 0x45u, 0x53u, 0xd8u, 0xe9u, 0xcfu, 0xecu, 0x68u, 0x15u, 0xebu, 0xadu, 0xc4u, 0x0au, 0x9fu, 0xfdu, 0x04u
            ),
            key3Key4.second
        )

        val key5Key6 = gostKeyExpand(2, key3Key4)
        assertContentEquals(
            ubyteArrayOf(
                0x57u, 0x64u, 0x64u, 0x68u, 0xc4u, 0x4au, 0x5eu, 0x28u, 0xd3u, 0xe5u, 0x92u, 0x46u, 0xf4u, 0x29u, 0xf1u, 0xacu
            ),
            key5Key6.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0xbdu, 0x07u, 0x94u, 0x35u, 0x16u, 0x5cu, 0x64u, 0x32u, 0xb5u, 0x32u, 0xe8u, 0x28u, 0x34u, 0xdau, 0x58u, 0x1bu
            ),
            key5Key6.second
        )

        val key7Key8 = gostKeyExpand(3, key5Key6)
        assertContentEquals(
            ubyteArrayOf(
                0x51u, 0xe6u, 0x40u, 0x75u, 0x7eu, 0x87u, 0x45u, 0xdeu, 0x70u, 0x57u, 0x27u, 0x26u, 0x5au, 0x00u, 0x98u, 0xb1u
            ),
            key7Key8.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x5au, 0x79u, 0x25u, 0x01u, 0x7bu, 0x9fu, 0xddu, 0x3eu, 0xd7u, 0x2au, 0x91u, 0xa2u, 0x22u, 0x86u, 0xf9u, 0x84u
            ),
            key7Key8.second
        )

        val key9Key10 = gostKeyExpand(4, key7Key8)
        assertContentEquals(
            ubyteArrayOf(
                0xbbu, 0x44u, 0xe2u, 0x53u, 0x78u, 0xc7u, 0x31u, 0x23u, 0xa5u, 0xf3u, 0x2fu, 0x73u, 0xcdu, 0xb6u, 0xe5u, 0x17u
            ),
            key9Key10.first
        )

        assertContentEquals(
            ubyteArrayOf(
                0x72u, 0xe9u, 0xddu, 0x74u, 0x16u, 0xbcu, 0xf4u, 0x5bu, 0x75u, 0x5du, 0xbau, 0xa8u, 0x8eu, 0x4au, 0x40u, 0x43u
            ),
            key9Key10.second
        )
    }

    // A.2.5
    @Test
    fun doTestEncrypt() {
        val a = ubyteArrayOf(
            0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u, 0x00u,
            0xffu, 0xeeu, 0xddu, 0xccu, 0xbbu, 0xaau, 0x99u, 0x88u
        )
        val key1Key2 = Pair(
            ubyteArrayOf(
                0x88u, 0x99u, 0xaau, 0xbbu, 0xccu, 0xddu, 0xeeu, 0xffu,
                0x00u, 0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u
            ),
            ubyteArrayOf(
                0xfeu, 0xdcu, 0xbau, 0x98u, 0x76u, 0x54u, 0x32u, 0x10u,
                0x01u, 0x23u, 0x45u, 0x67u, 0x89u, 0xabu, 0xcdu, 0xefu
            )
        )

        gostX(a, key1Key2.first, a)

        assertContentEquals(
            ubyteArrayOf(
                0x99u, 0xbbu, 0x99u, 0xffu, 0x99u, 0xbbu, 0x99u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu
            ),
            a
        )

        gostS(a)

        assertContentEquals(
            ubyteArrayOf(
                0xe8u, 0x7du, 0xe8u, 0xb6u, 0xe8u, 0x7du, 0xe8u, 0xb6u, 0xb6u, 0xb6u, 0xb6u, 0xb6u, 0xb6u, 0xb6u, 0xb6u, 0xb6u
            ),
            a
        )

        gostL(a)

        assertContentEquals(
            ubyteArrayOf(
                0xe2u, 0x97u, 0xb6u, 0x86u, 0xe3u, 0x55u, 0xb0u, 0xa1u, 0xcfu, 0x4au, 0x2fu, 0x92u, 0x49u, 0x14u, 0x08u, 0x30u
            ),
            a
        )

        gostE(a, key1Key2.second)
        assertContentEquals(
            ubyteArrayOf(
                0x28u, 0x5eu, 0x49u, 0x7au, 0x08u, 0x62u, 0xd5u, 0x96u, 0xb3u, 0x6fu, 0x42u, 0x58u, 0xa1u, 0xc6u, 0x90u, 0x72u
            ),
            a
        )

        val key3Key4 = gostKeyExpand(1, key1Key2)
        gostE(a, key3Key4.first)

        assertContentEquals(
            ubyteArrayOf(
                0x01u, 0x87u, 0xa3u, 0xa4u, 0x29u, 0xb5u, 0x67u, 0x84u, 0x1au, 0xd5u, 0x0du, 0x29u, 0x20u, 0x7cu, 0xc3u, 0x4eu
            ),
            a
        )

        gostE(a, key3Key4.second)

        assertContentEquals(
            ubyteArrayOf(
                0xecu, 0x9bu, 0xdbu, 0xa0u, 0x57u, 0xd4u, 0xf4u, 0xd7u, 0x7cu, 0x5du, 0x70u, 0x61u, 0x9du, 0xcau, 0xd2u, 0x06u
            ),
            a
        )

        val key5Key6 = gostKeyExpand(2, key3Key4)

        gostE(a, key5Key6.first)

        assertContentEquals(
            ubyteArrayOf(
                0x13u, 0x57u, 0xfdu, 0x11u, 0xdeu, 0x92u, 0x57u, 0x29u, 0x0cu, 0x2au, 0x14u, 0x73u, 0xebu, 0x6bu, 0xcdu, 0xe1u
            ),
            a
        )

        gostE(a, key5Key6.second)

        assertContentEquals(
            ubyteArrayOf(
                0x28u, 0xaeu, 0x31u, 0xe7u, 0xd4u, 0xc2u, 0x35u, 0x42u, 0x61u, 0x02u, 0x7eu, 0xf0u, 0xb3u, 0x28u, 0x97u, 0xdfu
            ),
            a
        )

        val key7Key8 = gostKeyExpand(3, key5Key6)

        gostE(a, key7Key8.first)

        assertContentEquals(
            ubyteArrayOf(
                0x07u, 0xe2u, 0x23u, 0xd5u, 0x60u, 0x02u, 0xc0u, 0x13u, 0xd3u, 0xf5u, 0xe6u, 0xf7u, 0x14u, 0xb8u, 0x6du, 0x2du
            ),
            a
        )

        gostE(a, key7Key8.second)

        assertContentEquals(
            ubyteArrayOf(
                0xcdu, 0x8eu, 0xf6u, 0xcdu, 0x97u, 0xe0u, 0xe0u, 0x92u, 0xa8u, 0xe4u, 0xccu, 0xa6u, 0x1bu, 0x38u, 0xbfu, 0x65u
            ),
            a
        )

        val key9Key10 = gostKeyExpand(4, key7Key8)

        gostE(a, key9Key10.first)

        assertContentEquals(
            ubyteArrayOf(
                0x0du, 0x8eu, 0x40u, 0xe4u, 0xa8u, 0x00u, 0xd0u, 0x6bu, 0x2fu, 0x1bu, 0x37u, 0xeau, 0x37u, 0x9eu, 0xadu, 0x8eu
            ),
            a
        )

        gostX(a, key9Key10.second, a)

        assertContentEquals(
            ubyteArrayOf(
                0x7fu, 0x67u, 0x9du, 0x90u, 0xbeu, 0xbcu, 0x24u, 0x30u, 0x5au, 0x46u, 0x8du, 0x42u, 0xb9u, 0xd4u, 0xedu, 0xcdu
            ),
            a
        )

        val k = Kuznyechik(key1Key2)
        val message = ubyteArrayOf(
            0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u, 0x00u,
            0xffu, 0xeeu, 0xddu, 0xccu, 0xbbu, 0xaau, 0x99u, 0x88u
        )

        assertContentEquals(
            ubyteArrayOf(
                0x7fu, 0x67u, 0x9du, 0x90u, 0xbeu, 0xbcu, 0x24u, 0x30u, 0x5au, 0x46u, 0x8du, 0x42u, 0xb9u, 0xd4u, 0xedu, 0xcdu
            ),
            k.encrypt(message)
        )
    }

    // A.2.6
    @Test
    fun doTestDecrypt() {
        var message = ubyteArrayOf(
            0x7fu, 0x67u, 0x9du, 0x90u, 0xbeu, 0xbcu, 0x24u, 0x30u,
            0x5au, 0x46u, 0x8du, 0x42u, 0xb9u, 0xd4u, 0xedu, 0xcdu
        )

        val key1Key2 = Pair(
            ubyteArrayOf(
                0x88u, 0x99u, 0xaau, 0xbbu, 0xccu, 0xddu, 0xeeu, 0xffu,
                0x00u, 0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u
            ),
            ubyteArrayOf(
                0xfeu, 0xdcu, 0xbau, 0x98u, 0x76u, 0x54u, 0x32u, 0x10u,
                0x01u, 0x23u, 0x45u, 0x67u, 0x89u, 0xabu, 0xcdu, 0xefu
            )
        )

        val expandedKeysMap = mutableMapOf<Int, Pair<UByteArray, UByteArray>>()
        expandedKeysMap[0] = key1Key2
        for (i in 1..4) {
            expandedKeysMap[i] = gostKeyExpand(i, expandedKeysMap[i - 1]!!)
        }

        var keyPair = expandedKeysMap[4]!!

        gostX(message, keyPair.second, message)

        assertContentEquals(
            ubyteArrayOf(
                0x0du, 0x8eu, 0x40u, 0xe4u, 0xa8u, 0x00u, 0xd0u, 0x6bu, 0x2fu, 0x1bu, 0x37u, 0xeau, 0x37u, 0x9eu, 0xadu, 0x8eu
            ),
            message
        )

        gostLReverse(message)

        assertContentEquals(
            ubyteArrayOf(
                0x8au, 0x6bu, 0x93u, 0x0au, 0x52u, 0x21u, 0x1bu, 0x45u, 0xc5u, 0xbau, 0xa4u, 0x3fu, 0xf8u, 0xb9u, 0x13u, 0x19u
            ),
            message
        )

        gostSReverse(message)

        assertContentEquals(
            ubyteArrayOf(
                0x76u, 0xcau, 0x14u, 0x9eu, 0xefu, 0x27u, 0xd1u, 0xb1u, 0x0du, 0x17u, 0xe3u, 0xd5u, 0xd6u, 0x8eu, 0x5au, 0x72u
            ),
            message
        )

        gostD(message, keyPair.first)

        assertContentEquals(
            ubyteArrayOf(
                0x5du, 0x9bu, 0x06u, 0xd4u, 0x1bu, 0x9du, 0x1du, 0x2du, 0x04u, 0xdfu, 0x77u, 0x55u, 0x36u, 0x3eu, 0x94u, 0xa9u
            ),
            message
        )

        keyPair = expandedKeysMap[3]!!

        gostD(message, keyPair.second)
        assertContentEquals(
            ubyteArrayOf(
                0x79u, 0x48u, 0x71u, 0x92u, 0xaau, 0x45u, 0x70u, 0x9cu, 0x11u, 0x55u, 0x59u, 0xd6u, 0xe9u, 0x28u, 0x0fu, 0x6eu
            ),
            message
        )

        gostD(message, keyPair.first)
        assertContentEquals(
            ubyteArrayOf(
                0xaeu, 0x50u, 0x69u, 0x24u, 0xc8u, 0xceu, 0x33u, 0x1bu, 0xb9u, 0x18u, 0xfcu, 0x5bu, 0xdfu, 0xb1u, 0x95u, 0xfau
            ),
            message
        )

        keyPair = expandedKeysMap[2]!!

        gostD(message, keyPair.second)
        assertContentEquals(
            ubyteArrayOf(
                0xbbu, 0xffu, 0xbfu, 0xc8u, 0x93u, 0x9eu, 0xaau, 0xffu, 0xafu, 0xb8u, 0xe2u, 0x27u, 0x69u, 0xe3u, 0x23u, 0xaau
            ),
            message
        )

        gostD(message, keyPair.first)
        assertContentEquals(
            ubyteArrayOf(
                0x3cu, 0xc2u, 0xf0u, 0x7cu, 0xc0u, 0x7au, 0x8bu, 0xecu, 0x0fu, 0x3eu, 0xa0u, 0xedu, 0x2au, 0xe3u, 0x3eu, 0x4au
            ),
            message
        )

        keyPair = expandedKeysMap[1]!!

        gostD(message, keyPair.second)
        assertContentEquals(
            ubyteArrayOf(
                0xf3u, 0x6fu, 0x01u, 0x29u, 0x1du, 0x0bu, 0x96u, 0xd5u, 0x91u, 0xe2u, 0x28u, 0xb7u, 0x2du, 0x01u, 0x1cu, 0x36u
            ),
            message
        )

        gostD(message, keyPair.first)
        assertContentEquals(
            ubyteArrayOf(
                0x1cu, 0x4bu, 0x0cu, 0x1eu, 0x95u, 0x01u, 0x82u, 0xb1u, 0xceu, 0x69u, 0x6au, 0xf5u, 0xc0u, 0xbfu, 0xc5u, 0xdfu
            ),
            message
        )

        keyPair = expandedKeysMap[0]!!
        gostD(message, keyPair.second)
        assertContentEquals(
            ubyteArrayOf(
                0x99u, 0xbbu, 0x99u, 0xffu, 0x99u, 0xbbu, 0x99u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu
            ),
            message
        )

        gostX(message, keyPair.first, message)

        val kuznyechik = Kuznyechik(key1Key2)

        message = ubyteArrayOf(
            0x7fu, 0x67u, 0x9du, 0x90u, 0xbeu, 0xbcu, 0x24u, 0x30u,
            0x5au, 0x46u, 0x8du, 0x42u, 0xb9u, 0xd4u, 0xedu, 0xcdu
        )

        message = kuznyechik.decrypt(message)
        assertContentEquals(
            ubyteArrayOf(
                0x11u, 0x22u, 0x33u, 0x44u, 0x55u, 0x66u, 0x77u, 0x00u, 0xffu, 0xeeu, 0xddu, 0xccu, 0xbbu, 0xaau, 0x99u, 0x88u
            ),
            message
        )
    }
}
